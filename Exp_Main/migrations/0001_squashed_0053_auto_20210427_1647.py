# Generated by Django 3.1.3 on 2021-05-04 20:37

import datetime
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    replaces = [('Exp_Main', '0001_initial'), ('Exp_Main', '0002_auto_20200716_1159'), ('Exp_Main', '0003_auto_20200716_1201'), ('Exp_Main', '0004_auto_20200716_1321'), ('Exp_Main', '0005_auto_20200716_1437'), ('Exp_Main', '0006_auto_20200716_1438'), ('Exp_Main', '0007_auto_20200716_1440'), ('Exp_Main', '0008_auto_20200716_1502'), ('Exp_Main', '0009_auto_20200716_1524'), ('Exp_Main', '0010_auto_20200716_1539'), ('Exp_Main', '0011_auto_20200716_1542'), ('Exp_Main', '0012_con_dip_hed_hev_kur_lqb_naf_nel_rld_sem_sfg'), ('Exp_Main', '0013_oca_sub_exp'), ('Exp_Main', '0014_auto_20200805_1249'), ('Exp_Main', '0015_auto_20200806_1139'), ('Exp_Main', '0016_auto_20200817_2027'), ('Exp_Main', '0017_sel'), ('Exp_Main', '0018_sel_sub_exp'), ('Exp_Main', '0019_auto_20200826_1218'), ('Exp_Main', '0020_auto_20200826_1300'), ('Exp_Main', '0021_auto_20200826_2108'), ('Exp_Main', '0022_sel_dash'), ('Exp_Main', '0023_auto_20200901_2129'), ('Exp_Main', '0024_sfg_dash'), ('Exp_Main', '0025_auto_20200901_2324'), ('Exp_Main', '0026_auto_20200918_1347'), ('Exp_Main', '0027_con_temp_mixing_ratio'), ('Exp_Main', '0028_auto_20200921_1830'), ('Exp_Main', '0029_auto_20200921_1847'), ('Exp_Main', '0030_auto_20200921_1848'), ('Exp_Main', '0031_remove_expbase_exp_type'), ('Exp_Main', '0032_auto_20201104_1900'), ('Exp_Main', '0033_group'), ('Exp_Main', '0034_auto_20201106_1546'), ('Exp_Main', '0035_auto_20201106_1554'), ('Exp_Main', '0036_auto_20201106_1618'), ('Exp_Main', '0037_remove_group_collapsed'), ('Exp_Main', '0038_group_dash'), ('Exp_Main', '0039_auto_20201117_0950'), ('Exp_Main', '0040_grp'), ('Exp_Main', '0041_comparison'), ('Exp_Main', '0042_auto_20201129_1332'), ('Exp_Main', '0043_sld'), ('Exp_Main', '0044_expbase_project'), ('Exp_Main', '0045_analysis_result_fit_result_oscillating_drop_analisis'), ('Exp_Main', '0046_auto_20210306_2222'), ('Exp_Main', '0047_auto_20210307_1534'), ('Exp_Main', '0048_exppath_pathprocesseddata'), ('Exp_Main', '0049_oca_link_osz_join_lsp'), ('Exp_Main', '0050_auto_20210310_1908'), ('Exp_Main', '0051_auto_20210311_1606'), ('Exp_Main', '0052_auto_20210322_1601'), ('Exp_Main', '0053_auto_20210427_1647')]

    initial = True

    dependencies = [
        ('Exp_Sub', '0001_squashed_0072_auto_20210427_1647'),
        ('Lab_Dash', '0001_squashed_0062_auto_20210427_1647'),
        ('Lab_Misc', '0001_squashed_0009_samplebase_comment'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpPath',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Abbrev', models.CharField(max_length=3, unique=True)),
                ('Name', models.TextField(unique=True)),
                ('Path', models.TextField(unique=True)),
                ('level', models.PositiveIntegerField(default=0, editable=False)),
                ('lft', models.PositiveIntegerField(default=1, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='Exp_Main.exppath')),
                ('rght', models.PositiveIntegerField(default=2, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, default=1, editable=False)),
                ('File_ending', models.ManyToManyField(blank=True, to='Exp_Main.FileEnding')),
            ],
        ),
        migrations.CreateModel(
            name='FileEnding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Ending', models.TextField(unique=True)),
                ('Comment', models.TextField(blank=True, null=True)),
                ('Name', models.TextField(blank=True, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DIP',
            fields=[
                ('expbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exp_Main.expbase')),
                ('Link', models.TextField(blank=True, null=True)),
                ('Link_Data', models.TextField(blank=True, null=True)),
                ('Link_PDF', models.TextField(blank=True, null=True)),
                ('Temp_Observation', models.TextField(blank=True, null=True)),
                ('Temp_Hypothesis', models.TextField(blank=True, null=True)),
                ('Temp_Mixing_ratio', models.TextField(blank=True, null=True)),
                ('Temp_Atmosphere_relax', models.TextField(blank=True, null=True)),
                ('Temp_Flowrate', models.TextField(blank=True, null=True)),
                ('Temp_Volume', models.TextField(blank=True, null=True)),
                ('Temp_Buzz_word', models.TextField(blank=True, null=True)),
                ('Temp_Bath_time', models.TextField(blank=True, null=True)),
            ],
            bases=('Exp_Main.expbase',),
        ),
        migrations.CreateModel(
            name='HED',
            fields=[
                ('expbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exp_Main.expbase')),
                ('Link_Video', models.TextField(blank=True, null=True)),
                ('Link', models.TextField(blank=True, null=True)),
                ('Link_PDF', models.TextField(blank=True, null=True)),
                ('Temp_Observation', models.TextField(blank=True, null=True)),
                ('Temp_Hypothesis', models.TextField(blank=True, null=True)),
                ('Temp_Mixing_ratio', models.TextField(blank=True, null=True)),
                ('Temp_Atmosphere_relax', models.TextField(blank=True, null=True)),
                ('Temp_Flowrate', models.TextField(blank=True, null=True)),
                ('Temp_Volume', models.TextField(blank=True, null=True)),
                ('Temp_Buzz_word', models.TextField(blank=True, null=True)),
                ('Temp_Bath_time', models.TextField(blank=True, null=True)),
            ],
            bases=('Exp_Main.expbase',),
        ),
        migrations.CreateModel(
            name='HEV',
            fields=[
                ('expbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exp_Main.expbase')),
                ('Link', models.TextField(blank=True, null=True)),
                ('Link_Data', models.TextField(blank=True, null=True)),
                ('Link_PDF', models.TextField(blank=True, null=True)),
                ('Temp_Observation', models.TextField(blank=True, null=True)),
                ('Temp_Hypothesis', models.TextField(blank=True, null=True)),
                ('Temp_Mixing_ratio', models.TextField(blank=True, null=True)),
                ('Temp_Atmosphere_relax', models.TextField(blank=True, null=True)),
                ('Temp_Flowrate', models.TextField(blank=True, null=True)),
                ('Temp_Volume', models.TextField(blank=True, null=True)),
                ('Temp_Buzz_word', models.TextField(blank=True, null=True)),
                ('Temp_Bath_time', models.TextField(blank=True, null=True)),
            ],
            bases=('Exp_Main.expbase',),
        ),
        migrations.CreateModel(
            name='KUR',
            fields=[
                ('expbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exp_Main.expbase')),
                ('Link', models.TextField(blank=True, null=True)),
                ('Link_Data', models.TextField(blank=True, null=True)),
                ('Link_PDF', models.TextField(blank=True, null=True)),
                ('Temp_Observation', models.TextField(blank=True, null=True)),
                ('Temp_Hypothesis', models.TextField(blank=True, null=True)),
                ('Temp_Mixing_ratio', models.TextField(blank=True, null=True)),
                ('Temp_Atmosphere_relax', models.TextField(blank=True, null=True)),
                ('Temp_Flowrate', models.TextField(blank=True, null=True)),
                ('Temp_Volume', models.TextField(blank=True, null=True)),
                ('Temp_Buzz_word', models.TextField(blank=True, null=True)),
                ('Temp_Bath_time', models.TextField(blank=True, null=True)),
                ('Dash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Lab_Dash.oca')),
            ],
            bases=('Exp_Main.expbase',),
        ),
        migrations.CreateModel(
            name='LQB',
            fields=[
                ('expbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exp_Main.expbase')),
                ('Link', models.TextField(blank=True, null=True)),
                ('Link_Data', models.TextField(blank=True, null=True)),
                ('Link_PDF', models.TextField(blank=True, null=True)),
                ('Temp_Observation', models.TextField(blank=True, null=True)),
                ('Temp_Hypothesis', models.TextField(blank=True, null=True)),
                ('Temp_Mixing_ratio', models.TextField(blank=True, null=True)),
                ('Temp_Atmosphere_relax', models.TextField(blank=True, null=True)),
                ('Temp_Flowrate', models.TextField(blank=True, null=True)),
                ('Temp_Volume', models.TextField(blank=True, null=True)),
                ('Temp_Buzz_word', models.TextField(blank=True, null=True)),
                ('Temp_Bath_time', models.TextField(blank=True, null=True)),
            ],
            bases=('Exp_Main.expbase',),
        ),
        migrations.CreateModel(
            name='NAF',
            fields=[
                ('expbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exp_Main.expbase')),
                ('Link_Video', models.TextField(blank=True, null=True)),
                ('Link_Data', models.TextField(blank=True, null=True)),
                ('Link', models.TextField(blank=True, null=True)),
                ('Temp_Observation', models.TextField(blank=True, null=True)),
                ('Temp_Hypothesis', models.TextField(blank=True, null=True)),
                ('Temp_Mixing_ratio', models.TextField(blank=True, null=True)),
                ('Temp_Atmosphere_relax', models.TextField(blank=True, null=True)),
                ('Temp_Flowrate', models.TextField(blank=True, null=True)),
                ('Temp_Volume', models.TextField(blank=True, null=True)),
                ('Temp_Buzz_word', models.TextField(blank=True, null=True)),
                ('Temp_Bath_time', models.TextField(blank=True, null=True)),
            ],
            bases=('Exp_Main.expbase',),
        ),
        migrations.CreateModel(
            name='NEL',
            fields=[
                ('expbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exp_Main.expbase')),
                ('Link_Video', models.TextField(blank=True, null=True)),
                ('Link', models.TextField(blank=True, null=True)),
                ('Link_PDF', models.TextField(blank=True, null=True)),
                ('Temp_Observation', models.TextField(blank=True, null=True)),
                ('Temp_Hypothesis', models.TextField(blank=True, null=True)),
                ('Temp_Mixing_ratio', models.TextField(blank=True, null=True)),
                ('Temp_Atmosphere_relax', models.TextField(blank=True, null=True)),
                ('Temp_Flowrate', models.TextField(blank=True, null=True)),
                ('Temp_Volume', models.TextField(blank=True, null=True)),
                ('Temp_Buzz_word', models.TextField(blank=True, null=True)),
                ('Temp_Bath_time', models.TextField(blank=True, null=True)),
            ],
            bases=('Exp_Main.expbase',),
        ),
        migrations.CreateModel(
            name='OCA',
            fields=[
                ('expbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exp_Main.expbase')),
                ('Link', models.TextField(blank=True, null=True)),
                ('Link_Data', models.TextField(blank=True, null=True)),
                ('Link_PDF', models.TextField(blank=True, null=True)),
                ('Temp_Observation', models.TextField(blank=True, null=True)),
                ('Temp_Hypothesis', models.TextField(blank=True, null=True)),
                ('Temp_Mixing_ratio', models.TextField(blank=True, null=True)),
                ('Temp_Atmosphere_relax', models.TextField(blank=True, null=True)),
                ('Temp_Flowrate', models.TextField(blank=True, null=True)),
                ('Temp_Volume', models.TextField(blank=True, null=True)),
                ('Temp_Buzz_word', models.TextField(blank=True, null=True)),
                ('Temp_Bath_time', models.TextField(blank=True, null=True)),
                ('Dash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Lab_Dash.oca')),
                ('Sub_Exp', models.ManyToManyField(blank=True, to='Exp_Sub.ExpBase')),
            ],
            bases=('Exp_Main.expbase',),
        ),
        migrations.CreateModel(
            name='RLD',
            fields=[
                ('expbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exp_Main.expbase')),
                ('Link', models.TextField(blank=True, null=True)),
                ('Link_Data', models.TextField(blank=True, null=True)),
                ('Link_PDF', models.TextField(blank=True, null=True)),
                ('Temp_Observation', models.TextField(blank=True, null=True)),
                ('Temp_Hypothesis', models.TextField(blank=True, null=True)),
                ('Temp_Mixing_ratio', models.TextField(blank=True, null=True)),
                ('Temp_Atmosphere_relax', models.TextField(blank=True, null=True)),
                ('Temp_Flowrate', models.TextField(blank=True, null=True)),
                ('Temp_Volume', models.TextField(blank=True, null=True)),
                ('Temp_Buzz_word', models.TextField(blank=True, null=True)),
                ('Temp_Bath_time', models.TextField(blank=True, null=True)),
                ('t1', models.TextField(blank=True, null=True)),
                ('t2', models.TextField(blank=True, null=True)),
                ('t3', models.TextField(blank=True, null=True)),
            ],
            bases=('Exp_Main.expbase',),
        ),
        migrations.CreateModel(
            name='SEL',
            fields=[
                ('expbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exp_Main.expbase')),
                ('Link_XLSX', models.TextField(blank=True, null=True)),
                ('Link', models.TextField(blank=True, null=True)),
                ('Link_PDF', models.TextField(blank=True, null=True)),
                ('Temp_Observation', models.TextField(blank=True, null=True)),
                ('Temp_Hypothesis', models.TextField(blank=True, null=True)),
                ('Temp_Mixing_ratio', models.TextField(blank=True, null=True)),
                ('Temp_Atmosphere_relax', models.TextField(blank=True, null=True)),
                ('Temp_Flowrate', models.TextField(blank=True, null=True)),
                ('Temp_Volume', models.TextField(blank=True, null=True)),
                ('Temp_Buzz_word', models.TextField(blank=True, null=True)),
                ('Temp_Bath_time', models.TextField(blank=True, null=True)),
                ('Sub_Exp', models.ManyToManyField(blank=True, to='Exp_Sub.ExpBase')),
                ('Dash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Lab_Dash.sel')),
            ],
            bases=('Exp_Main.expbase',),
        ),
        migrations.CreateModel(
            name='SEM',
            fields=[
                ('expbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exp_Main.expbase')),
                ('Link', models.TextField(blank=True, null=True)),
                ('Link_Data', models.TextField(blank=True, null=True)),
                ('Link_PDF', models.TextField(blank=True, null=True)),
                ('Temp_Observation', models.TextField(blank=True, null=True)),
                ('Temp_Hypothesis', models.TextField(blank=True, null=True)),
                ('Temp_Buzz_word', models.TextField(blank=True, null=True)),
            ],
            bases=('Exp_Main.expbase',),
        ),
        migrations.CreateModel(
            name='SFG',
            fields=[
                ('expbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exp_Main.expbase')),
                ('Link_Video', models.TextField(blank=True, null=True)),
                ('Link', models.TextField(blank=True, null=True)),
                ('Link_PDF', models.TextField(blank=True, null=True)),
                ('Temp_Observation', models.TextField(blank=True, null=True)),
                ('Temp_Hypothesis', models.TextField(blank=True, null=True)),
                ('Temp_Mixing_ratio', models.TextField(blank=True, null=True)),
                ('Temp_Atmosphere_relax', models.TextField(blank=True, null=True)),
                ('Temp_Flowrate', models.TextField(blank=True, null=True)),
                ('Temp_Volume', models.TextField(blank=True, null=True)),
                ('Temp_Buzz_word', models.TextField(blank=True, null=True)),
                ('Temp_Bath_time', models.TextField(blank=True, null=True)),
                ('XPos_mm', models.FloatField(blank=True, null=True)),
                ('YPos_mm', models.FloatField(blank=True, null=True)),
                ('Dash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Lab_Dash.sfg')),
                ('Measurement_Mode', models.CharField(blank=True, choices=[('1', 'External Reflection'), ('2', 'Internal Reflection')], max_length=1, null=True)),
                ('Polarization', models.CharField(blank=True, choices=[('1', 'PPP'), ('2', 'SSP')], max_length=1, null=True)),
            ],
            bases=('Exp_Main.expbase',),
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.TextField(blank=True, db_column='Name:', null=True, unique=True)),
                ('Description', models.TextField(blank=True, db_column='Description:', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ObservationHierarchy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.TextField(blank=True, db_column='Name:', null=True, unique=True)),
                ('Description', models.TextField(blank=True, db_column='Description:', null=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('Observation', models.ManyToManyField(blank=True, to='Exp_Main.Observation')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='Exp_Main.observationhierarchy')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CON',
            fields=[
                ('expbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exp_Main.expbase')),
                ('Link', models.TextField(blank=True, null=True)),
                ('Link_Data', models.TextField(blank=True, null=True)),
                ('Link_PDF', models.TextField(blank=True, null=True)),
                ('Temp_Observation', models.TextField(blank=True, null=True)),
                ('Temp_Hypothesis', models.TextField(blank=True, null=True)),
                ('Temp_Buzz_word', models.TextField(blank=True, null=True)),
                ('Temp_Bath_time', models.TextField(blank=True, null=True)),
                ('Temp_Mixing_ratio', models.TextField(blank=True, null=True)),
            ],
            bases=('Exp_Main.expbase',),
        ),
        migrations.CreateModel(
            name='ExpType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.TextField(blank=True, db_column='Name:', null=True, unique=True)),
                ('Description', models.TextField(blank=True, db_column='Description:', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.TextField(blank=True, db_column='Name:', null=True, unique=True)),
                ('Description', models.TextField(blank=True, db_column='Description:', null=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='Exp_Main.group')),
                ('ExpBase', models.ManyToManyField(blank=True, to='Exp_Main.ExpBase')),
                ('Dash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Lab_Dash.grp')),
                ('Comment', models.TextField(blank=True, null=True)),
                ('Date_time', models.DateTimeField(blank=True, default=datetime.datetime(1900, 1, 1, 0, 0))),
                ('Device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Exp_Main.exppath')),
                ('Observation', models.ManyToManyField(blank=True, to='Exp_Main.Observation')),
                ('Sample_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Lab_Misc.samplebase')),
                ('Type', models.ManyToManyField(blank=True, to='Exp_Main.ExpType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GRP',
            fields=[
                ('expbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exp_Main.expbase')),
                ('Group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Exp_Main.group')),
            ],
            bases=('Exp_Main.expbase',),
        ),
        migrations.CreateModel(
            name='Comparison',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.TextField(blank=True, null=True, unique=True)),
                ('ExpBase', models.ManyToManyField(blank=True, to='Exp_Main.ExpBase')),
                ('Dash', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to='Lab_Dash.comparison')),
            ],
        ),
        migrations.CreateModel(
            name='SLD',
            fields=[
                ('expbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exp_Main.expbase')),
                ('Link', models.TextField(blank=True, null=True)),
                ('Link_Data', models.TextField(blank=True, null=True)),
                ('Link_PDF', models.TextField(blank=True, null=True)),
                ('Temp_Observation', models.TextField(blank=True, null=True)),
                ('Temp_Hypothesis', models.TextField(blank=True, null=True)),
                ('Temp_Mixing_ratio', models.TextField(blank=True, null=True)),
                ('Temp_Buzz_word', models.TextField(blank=True, null=True)),
                ('Temp_Bath_time', models.TextField(blank=True, null=True)),
            ],
            bases=('Exp_Main.expbase',),
        ),
        migrations.CreateModel(
            name='ExpBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sample_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Lab_Misc.samplebase')),
                ('Name', models.TextField(blank=True, null=True, unique=True)),
                ('Date_time', models.DateTimeField(blank=True, default=datetime.datetime(1900, 1, 1, 0, 0))),
                ('Device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Exp_Main.exppath')),
                ('Comment', models.TextField(blank=True, null=True)),
                ('Observation', models.ManyToManyField(blank=True, to='Exp_Main.Observation')),
                ('Type', models.ManyToManyField(blank=True, to='Exp_Main.ExpType')),
                ('Project', models.ManyToManyField(blank=True, to='Lab_Misc.ProjectEntry')),
            ],
        ),
        migrations.CreateModel(
            name='Analysis_result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Drop_Nr', models.IntegerField(blank=True, null=True)),
                ('LoR_CL', models.TextField(blank=True, choices=[('Left', 'Left'), ('Right', 'Right')], null=True)),
                ('Max_CL', models.FloatField(blank=True, null=True)),
                ('Max_CA', models.FloatField(blank=True, null=True)),
                ('Min_CA', models.FloatField(blank=True, null=True)),
                ('Min_AdvCA', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fit_result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Drop_Nr', models.IntegerField(blank=True, null=True)),
                ('LoR_CL', models.TextField(blank=True, choices=[('Left', 'Left'), ('Right', 'Right')], null=True)),
                ('ErroVal', models.TextField(blank=True, choices=[('Value', 'Value'), ('Error', 'Error')], null=True)),
                ('x_pos', models.FloatField(blank=True, null=True)),
                ('y_pos', models.FloatField(blank=True, null=True)),
                ('Step_width', models.FloatField(blank=True, null=True)),
                ('Step_hight', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Oscillating_Drop_Analisis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.TextField(unique=True)),
                ('Drop_center', models.FloatField(blank=True, null=True)),
                ('Analysis_result', models.ManyToManyField(blank=True, to='Exp_Main.Analysis_result')),
                ('Exp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Exp_Main.expbase')),
                ('Fit_result', models.ManyToManyField(blank=True, to='Exp_Main.Fit_result')),
            ],
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.AlterModelTable(
                    name='Comparison',
                    table='Analysis_comparison',
                ),
            ],
            state_operations=[
                migrations.DeleteModel(
                    name='Comparison',
                ),
            ],
        ),
        migrations.RemoveField(
            model_name='oscillating_drop_analisis',
            name='Analysis_result',
        ),
        migrations.RemoveField(
            model_name='oscillating_drop_analisis',
            name='Exp',
        ),
        migrations.RemoveField(
            model_name='oscillating_drop_analisis',
            name='Fit_result',
        ),
        migrations.DeleteModel(
            name='Analysis_result',
        ),
        migrations.DeleteModel(
            name='Fit_result',
        ),
        migrations.DeleteModel(
            name='Oscillating_Drop_Analisis',
        ),
        migrations.AddField(
            model_name='exppath',
            name='PathProcessedData',
            field=models.TextField(blank=True, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='oca',
            name='Link_Osz_join_LSP',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='hed',
            name='Liquid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Exp_Main.liquid'),
        ),
        migrations.AddField(
            model_name='oca',
            name='Liquid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Exp_Main.liquid'),
        ),
        migrations.CreateModel(
            name='LPT',
            fields=[
                ('expbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Exp_Main.expbase')),
                ('Link', models.TextField(blank=True, null=True)),
                ('Link_Data', models.TextField(blank=True, null=True)),
                ('Link_PDF', models.TextField(blank=True, null=True)),
                ('Dash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Lab_Dash.oca')),
                ('Liquid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Exp_Main.liquid')),
                ('Sub_Exp', models.ManyToManyField(blank=True, to='Exp_Sub.ExpBase')),
            ],
            bases=('Exp_Main.expbase',),
        ),
        migrations.CreateModel(
            name='Liquid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.TextField()),
                ('Born', models.DateTimeField(blank=True, default=datetime.datetime(2021, 4, 27, 16, 47, 33, 263610), null=True)),
                ('Death', models.DateTimeField(blank=True, default=datetime.datetime(2021, 4, 27, 16, 47, 33, 263610), null=True)),
                ('Description', models.TextField(blank=True, null=True)),
            ],
        ),
    ]
